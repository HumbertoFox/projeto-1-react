generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model address_all {
  address_id           Int            @id @default(autoincrement())
  zipcode              String
  residencenumber      String         @db.VarChar(50)
  building             String         @db.VarChar(100)
  buildingblock        String         @db.VarChar(50)
  apartment            String         @db.VarChar(50)
  registerdate         DateTime       @default(now()) @db.Timestamp(0)
  address_all_zipcode  zipcode_all    @relation(fields: [zipcode], references: [zipcode])
  address_all_doctors  doctors_all[]
  address_all_patients patients_all[]
  address_all_user     user_all[]
}

model consultation_all {
  consultation_id       Int      @id @default(autoincrement())
  cpf                   String
  crm                   String
  plan                  String   @db.VarChar(50)
  particular            String   @db.VarChar(50)
  courtesy              String   @db.VarChar(20)
  observation           String
  consultdatestart      DateTime @db.Date
  consultdateend        DateTime @db.Date
  user_id               Int
  registerdate          DateTime @default(now()) @db.Timestamp(0)
  consultation_cpf      cpf_all  @relation(fields: [cpf], references: [cpf])
  consultation_crm      crm_all  @relation(fields: [crm], references: [crm])
  consultation_all_user user_all @relation(fields: [user_id], references: [user_id])
}

model cpf_all {
  cpf                  String             @id @db.VarChar(11)
  name                 String             @db.VarChar(100)
  dateofbirth          DateTime           @db.Date
  cpf_all_consultation consultation_all[]
  cpf_all_doctors      doctors_all[]
  cpf_all_patients     patients_all[]
  cpf_all_user         user_all[]
}

model crm_all {
  crm                  String             @id @db.VarChar(11)
  crm_all_consultation consultation_all[]
  crm_all_doctor       doctors_all[]
}

model doctors_all {
  doctor_id             Int           @id @default(autoincrement())
  crm                   String
  cpf                   String
  telephone             String
  address_id            Int
  user_id               Int
  registerdate          DateTime      @default(now()) @db.Timestamp(0)
  address_all           address_all   @relation(fields: [address_id], references: [address_id])
  doctors_all_cpf       cpf_all       @relation(fields: [cpf], references: [cpf])
  doctors_all_crm       crm_all       @relation(fields: [crm], references: [crm])
  doctors_all_telephone telephone_all @relation(fields: [telephone], references: [telephone])
  user                  user_all      @relation(fields: [user_id], references: [user_id])
}

model patients_all {
  patient_id               Int           @id @default(autoincrement())
  cpf                      String
  telephone                String
  address_id               Int
  registerdate             DateTime      @default(now()) @db.Timestamp(0)
  parients_all_address_all address_all   @relation(fields: [address_id], references: [address_id])
  patients_all_cpf         cpf_all       @relation(fields: [cpf], references: [cpf])
  patients__all_telephone  telephone_all @relation(fields: [telephone], references: [telephone])
}

model telephone_all {
  telephone             String         @id @db.VarChar(11)
  email                 String         @db.VarChar(150)
  telephone_all_doctors doctors_all[]
  telephone_patients    patients_all[]
  telephone_user        user_all[]
}

model user_all {
  user_id        Int                @id @default(autoincrement())
  cpf            String
  telephone      String
  password       String             @db.VarChar(200)
  address_id     Int
  registerdate   DateTime           @default(now()) @db.Timestamp(0)
  consultation   consultation_all[]
  doctors        doctors_all[]
  address_all    address_all        @relation(fields: [address_id], references: [address_id])
  user_cpf       cpf_all            @relation(fields: [cpf], references: [cpf])
  user_telephone telephone_all      @relation(fields: [telephone], references: [telephone])
}

model zipcode_all {
  zipcode             String        @id @db.VarChar(11)
  street              String        @db.VarChar(100)
  district            String        @db.VarChar(100)
  city                String        @db.VarChar(100)
  zipcode_address_all address_all[]
}
